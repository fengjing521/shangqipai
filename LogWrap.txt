/**
 *    Description: 
 *    Date: 2019.2.27 
 *    Creator : fengjing
 *    ModifyList:
 */
// let OPENLOGFLAG = true;
let OPENLOGLEVEL = 4; // 默认1 不打印 2 只log可用 3 只打印需要查看的部分 >3 全打印 比boolen好处是可以部分打印
let LogWrap ={
    log: function (...args) {
        if (OPENLOGLEVEL == 2 || OPENLOGLEVEL > 3) {
            for (let i = 0; i < args.length; i++) {
                console.log(args[i]);
            }
        } else {
            return;
        }
    },
    // log: function (a, b, c, d, e, f) { 讨巧做法
    //     if (OPENLOGLEVEL==2 || OPENLOGLEVEL>3) {
    //         a = a || '';
    //         b = b || '';
    //         c = c || '';
    //         d = d || '';
    //         e = e || '';
    //         f = f || '';
    //         console.log(a, b, c, d, e, f);
    //     }else{
    //         return;
    //     }

    // },
    // log(args) {
    // console.log(arguments, arguments.length)
    //函数的参数长度是以传入的参数长度为准，可以arguments获取,arguments.length打印，一般很少用到，以实参为准
    //     let backLog = console.log || cc.log // || log;
    //     if (OPENLOGFLAG) {
    //         backLog.call(this, "%s%s:" + cc.js.formatStr.apply(cc, arguments), LogWrap.stack(2), LogWrap.getDateString());
    //     }
    // },
    info(args) {
        let backLog = console.log || cc.log // || log;        
        if (OPENLOGLEVEL >= 3) {
            backLog.call(this, "%c%s%s:" + cc.js.formatStr.apply(cc, arguments), "color:#00CD00;", LogWrap.stack(2), LogWrap.getDateString());
        }

    },
    warn(args) {
        let backLog = console.log || cc.log // || log;
        if (OPENLOGLEVEL >= 3) {
            backLog.call(this, "%c%s%s:" + cc.js.formatStr.apply(cc, arguments), "color:#ee7700;", LogWrap.stack(2), LogWrap.getDateString());
            //cc.warn
        }
    },
    err(args) {
        let backLog = console.log || cc.log // || log;
        if (OPENLOGLEVEL >= 3) {
            backLog.call(this, "%c%s%s:" + cc.js.formatStr.apply(cc, arguments), "color:red", LogWrap.stack(2), LogWrap.getDateString());
        }
    },
    stack(index) {
        let e = new Error();
        let lines = e.stack.split("\n");
        lines.shift();
        let result = [];
        lines.forEach(function (line) {
            line = line.substring(7);
            let lineBreak = line.split(" ");
            if (lineBreak.length < 2) {
                result.push(lineBreak[0]);
            } else {
                result.push({
                    [lineBreak[0]]: lineBreak[1]
                });
            }
        });

        let list = [];
        if (index < result.length - 1) {
            for (let a in result[index]) {
                list.push(a);
            }
        }

        let splitList = list[0].split(".");
        return (splitList[0] + ".js->" + splitList[1] + ": ");
    },
    getDateString() {
        let d = new Date();
        let str = d.getHours().toString();
        let timeStr = "";
        timeStr += (str.length == 1 ? "0" + str : str) + ":";
        str = d.getMinutes().toString();
        timeStr += (str.length == 1 ? "0" + str : str) + ":";
        str = d.getSeconds().toString();
        timeStr += (str.length == 1 ? "0" + str : str) + ":";
        str = d.getMilliseconds().toString();
        if (str.length == 1) str = "00" + str;
        if (str.length == 2) str = "0" + str;
        timeStr += str;

        timeStr = "[" + timeStr + "]";
        return timeStr;
    },
};
module.exports = LogWrap;
// module.exports = LogWrap;